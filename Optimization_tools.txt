1 cProfile - стандартный модуль для поиска слабых мест в коде. Замеряет кол-во вызовов функций и затраченное для этих
вызовов время

2 timeit - стандартный модуль. Метод timeit позволяет замерять время, завтраченное на какие-то операции.

3 sys.getsizeof - функция, которая замеряет кол-во потребляемой объектом памяти. Не работает с рекурсией.

4 Библиотека pympler - инструмент разработки для измерения, мониторинга и анализа памяти объектов приложениях. Метод
asizeof замеряет кол-во потребляемой объектом памяти, работает и с рекурсией, в отличие от sys.getsizeof
ip install pympler

5 Библиотека guppy. Модуль Heapy поддерживает определение размеров, профилирование и отладку памяти объекта и кучи
pip install guppy

6 Numpy - модуль, который предоставляет общие математические и числовые операции в виде пре-скомпилированных,
быстрых функций. Предоставляет базовые методы для манипуляции с большими массивами и матрицами.
SciPy расширяет функционал numpy огромной коллекцией полезных алгоритмов, таких как минимизация, преобразование Фурье,
регрессия, и другие прикладные математические техники.
python -m pip install --user numpy scipy matplotlib ipython jupyter pandas sympy nose

7 objgraph - набор функций для поиска утечки памяти в программе на Python.
pip install objgraph

8 Использование __slots__ в парадигме ООП, если кол-во атрибутов в классе изменяться не будет. Вместо словаря атрибуты
будут храниться в другом типе данных, который будет задан при переопределении __slots__
class HexOperation:
    __slots__ = ('num_first', 'num_second')

    def __init__(self, num_first, num_second):
        self.num_first = num_first
        self.num_second = num_second

