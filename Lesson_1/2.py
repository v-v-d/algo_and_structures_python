# 2. Выполнить логические побитовые операции "И", "ИЛИ" и др.
# над числами 5 и 6. Выполнить
# над числом 5 побитовый сдвиг вправо и влево на два знака.

# При побитовых операциях целое число представляются в двоичной системе счисления.

# Побитовое И (AND). Сравниваются биты одного числа и биты другого. 1 и 1 дают 1, во всех остальных случаях будет 0
# 5 = 0b101
# 6 = 0b110
# 4 = 0b100 - результат
print(5 & 6)

# Побитовое ИЛИ (OR). Сравниваются биты одного числа и биты другого. 0 и 0 дают 0, во всех остальных случаях будет 1
# 5 = 0b101
# 6 = 0b110
# 7 = 0b111 - результат
print(5 | 6)

# Исключающее ИЛИ (XOR). Сравниваются биты одного числа и биты другого. 0 и 0, 1 и 1 дают 0, иначе будет 1
# 5 = 0b101
# 6 = 0b110
# 3 = 0b011 - результат
print(5 ^ 6)

# Побитовое отрицание НЕ (NOT). Замена 0 на 1 и наоборот.
# В десятичной системе счисления прибавляет 1, переводит в двоичную и меняет знак
#  5 =  0b101
# -6 = -0b110 - результат
print(~ 5)

# Побитовый сдвиг на n позиций. В нашем случае n = 2.
#
# Сдвиг всех бит на n позиций вправо. n правых битов отбрасывается. Если число положительное, то пустоты
# заполняются нулями, если отрицательное - заполняются единицами. Это делается для сохранения знака.
# Эквивалентно целочисленному делению числа на 2^n.
# 5 = 0b101
# 1 = 0b001 - результат
print(5 >> 2)

# Сдвиг всех бит на n позиций влево, пустоты заполняются n нулями. Эквивалентно умножению числа на 2^n.
#  5 = 0b101
# 20 = 0b10100 - результат
print(5 << 2)
